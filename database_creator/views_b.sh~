#!/bin/bash

USERNAME='root'
PASSWORD='toor'
DATABASE='cricRecords'

# views are defined here

mysql -u $USERNAME -p$PASSWORD $DATABASE -e \
"

-- VIEW for the Batting Statistics for a batsman for an inning
-- balls faced includes noballs faced by the batsman but not wides
-- FORMULAE INVOLVED --
-- strikerate => runs scored per hundred (100) ballsinvolved
--      => runs_scored / balls_faced * 100

CREATE OR REPLACE VIEW v_battingstat AS
SELECT b.batsman, p.sname, o.innings, sum(b.runs) as runs,
    ballsinvolved(b.batsman, 1, b.over) as ballsfaced,
    boundaryCount(b.batsman, 1, b.over, 4) as 4s,
    boundaryCount(b.batsman, 1, b.over, 6) as 6s,
    (sum(b.runs)/ballsinvolved(b.batsman, 1, b.over))*100 as strikerate,
    notoutcheck(b.batsman, o.innings) isNO
FROM Ball b
INNER JOIN Over o ON o.ID=b.over
INNER JOIN Player p ON p.ID=b.batsman
GROUP BY b.batsman, o.innings;


-- VIEW for the Bowling Statistics for a bowling for an inning
-- balls bowled excludes both noballs and wides
-- FORMULAE INVOLVED --
-- economy => runs conceded per over
--      => runs_conceded / number_of_overs_bowled
--      => runs_conceded / balls_bowled * 6
-- average => runs conceded per wickets
--      => runs_conceded / wickets_taken

CREATE OR REPLACE VIEW v_bowlingstat AS
SELECT b.bowler,
    p.sname,
    o.innings,
    ballsinvolved(b.bowler, 0, b.over) ballsbowled,
    maidenscount(b.bowler, o.innings) maidens,
    sum(b.runs) runs,
    (SELECT count(*) FROM Wicket
        WHERE innings = o.innings AND bowler = b.bowler) wickets,
    boundaryCount(b.bowler, 0, b.over, 4) 4s,
    boundaryCount(b.bowler, 0, b.over, 6) 6s,
    extracount(b.bowler, o.innings, 0) wides,
    extracount(b.bowler, o.innings, 1) noballs,
    (sum(b.runs)/ballsinvolved(b.bowler, 0, b.over))*6 economy,
    sum(b.runs)/((SELECT count(*) FROM Wicket
        WHERE innings = o.innings AND bowler = b.bowler)) average
FROM Ball b
INNER JOIN Over o ON o.ID = b.over
INNER JOIN Player p ON p.ID = b.bowler
GROUP BY b.bowler, o.innings;


-- VIEW for the Career Batting Statistics for a batsman
-- best: maximum runs scored in a single innings
--      for multiple instances, not-out innings gets higher priority in best
-- FORMULAE INVOLVED --
-- involved formulae are already defined in v_battingstat

CREATE OR REPLACE VIEW v_career_batsman AS
SELECT batsman ID, sname player, f.format format,
    (SELECT count(*) FROM PlayerXMatch
        WHERE player = batsman AND matchID IN
        (SELECT m.ID FROM Matches m
            INNER JOIN Series s ON m.series = s.ID
            WHERE s.format = f.ID)
        ) matches,
    count(*) innings,
    sum(isNO) NOs,
    sum(runs) runs,
    sum(ballsfaced) ballsfaced,
    (SELECT max(runs) from v_battingstat v1 WHERE b2.batsman = v1.batsman
        AND runs = (
            SELECT max(runs) from v_battingstat v3
            WHERE v3.batsman = b2.batsman)
    ) best,
    (SELECT max(isNO) from v_battingstat v1 WHERE b2.batsman = v1.batsman
        AND runs = (
            SELECT max(runs) from v_battingstat v3
            WHERE v3.batsman = b2.batsman)
    ) isNO,
    sum(4s) 4s,
    sum(6s) 6s,
    sum(runs)*100/sum(ballsfaced) strikerate,
    sum(runs)/notcareernotout(batsman, f.ID) average,
    (SELECT count(*) FROM v_battingstat b1
        WHERE b1.batsman = b2.batsman AND runs > 49 AND runs < 100) 50s,
    (SELECT count(*) FROM v_battingstat b1
        WHERE b1.batsman = b2.batsman AND runs > 99) 100s
    FROM v_battingstat b2
    LEFT JOIN Innings i ON i.ID = innings
    LEFT JOIN Matches m ON m.ID = i.matchID
    LEFT JOIN Series s ON s.ID = m.series
    LEFT JOIN Format f ON f.ID = s.format
    GROUP BY batsman;


-- VIEW for the Career Bowling Statistics for a bowler
-- best: maximum wickets taken in a single innings
--      for multiple such instances, minimum runs conceded gets higher priority
-- 10w: matches with 10+ wickets taken (includes 10 wickets)
-- FORMULAE INVOLVED --
-- strike rate => balls bowled per wicket taken
--  => number_of_balls_bowled / wickets_taken

CREATE OR REPLACE VIEW v_career_bowler AS
SELECT bowler ID, sname player, f.format format,
    (SELECT count(*) FROM PlayerXMatch
        WHERE player = bowler AND matchID IN
        (SELECT m.ID FROM Matches m
            INNER JOIN Series s ON m.series = s.ID
            WHERE s.format = f.ID)
        ) matches,
    count(*) innings,
    sum(runs) runsconceded,
    sum(ballsbowled) ballsbowled,
    sum(maidens) maidens,
    sum(wickets) wickets,
    (SELECT max(wickets) from v_bowlingstat v1 WHERE b2.bowler = v1.bowler
        AND wickets = (
            SELECT max(wickets) from v_bowlingstat v3
            WHERE v3.bowler = b2.bowler)
    ) bestwkts,
    (SELECT min(runs) from v_bowlingstat v1 WHERE b2.bowler = v1.bowler
        AND wickets = (
            SELECT max(wickets) from v_bowlingstat v3
            WHERE v3.bowler = b2.bowler)
    ) bestruns,
    sum(4s) 4s,
    sum(6s) 6s,
    sum(wides) wides, sum(noballs) noballs,
    sum(runs)*6/sum(ballsbowled) economy,
    sum(runs)/sum(wickets) average,
    sum(ballsbowled)/sum(wickets) strikerate,
    (SELECT count(*) FROM v_bowlingstat b1
        WHERE b1.bowler = b2.bowler AND wickets > 4 AND wickets < 10) 5w,
    (SELECT count(*) FROM v_bowlingstat b1
        WHERE b1.bowler = b2.bowler AND wickets > 9
        AND innings IN (SELECT ID FROM Innings WHERE matchID = m.ID)
        ) 10w
    FROM v_bowlingstat b2
    LEFT JOIN Innings i ON i.ID = innings
    LEFT JOIN Matches m ON m.ID = i.matchID
    LEFT JOIN Series s ON s.ID = m.series
    LEFT JOIN Format f ON f.ID = s.format
    GROUP BY bowler;
"
